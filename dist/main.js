"use strict";function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,o=Array(e.length);t<e.length;t++)o[t]=e[t];return o}return Array.from(e)}function getWorkersArray(e,t){return t.memory.jobs[e].workers}function deleteWorkerAll(e,t,o){for(var s in e.jobs)Memory.rooms[t].jobs[s].workers.indexOf(o)>-1&&Memory.rooms[t].jobs[s].workers.splice(Memory.rooms[t].jobs[s].workers.indexOf(o),1),Memory.rooms[t].jobs.deposit.tasks.indexOf(o)>-1&&Memory.rooms[t].jobs.deposit.tasks.splice(Memory.rooms[t].jobs.deposit.tasks.indexOf(o),1)}function getTasksArray(e,t){return t.memory.jobs[e].tasks}function getTaskAt(e,t,o){return o.memory.jobs[t].tasks[e]}function initialize(e){Game.time%5&&(Memory.rooms[e.name]={}),Memory.rooms[e.name].sc||(Memory.rooms[e.name].sc=e.find(FIND_SOURCES).length),Memory.rooms[e.name].pc||(Memory.rooms[e.name].pc=3e3*Memory.rooms[e.name].sc),Memory.rooms[e.name].pt||(Memory.rooms[e.name].pt=Math.ceil(Memory.rooms[e.name].pc/300)),Memory.rooms[e.name].jobs||(Memory.rooms[e.name].jobs={list:[],whack:{workers:[],tasks:[]},construct:{workers:[],tasks:[]},deposit:{workers:[],tasks:[]},collect:{workers:[],tasks:[]},aid:{workers:[],tasks:[]},fix:{workers:[],tasks:[]},sweep:{workers:[],tasks:[]},mine:{workers:[],tasks:[]},eat:{workers:[],tasks:[]},upgrade:{workers:[],tasks:[]}}),Memory.rooms[e.name].miningSpots||(Memory.rooms[e.name].miningSpots=e.miningSpots(e.find(FIND_SOURCES)))}function queen(e){var t=e.room;initialize(t),t.memory.jobs.upgrade.tasks&&(t.memory.jobs.upgrade.tasks.push(t.controller.id),t.memory.jobs.deposit.tasks.push(e.id),t.memory.jobs.eat.tasks.push(e.id));var o=t.find(FIND_STRUCTURES,{filter:function(e){return"container"==e.structureType}});if(o.length)for(var s in o)o[s].report();var r=t.find(FIND_DROPPED_RESOURCES);if(r.length)for(var i in r){r[i];t.memory.jobs.sweep.tasks.push(r[i].id)}var m=t.controller.level,a=Memory.recipes.frog,n=Memory.recipes.toad,c=Memory.recipes.newt,y=Math.min(t.memory.jobs.collect.tasks.length,t.memory.jobs.deposit.tasks.length)?Math.min(t.memory.jobs.collect.tasks.length,t.memory.jobs.deposit.tasks.length):0,h=Math.max(t.memory.jobs.construct.tasks.length,r.length+t.memory.sc)?Math.max(t.memory.jobs.construct.tasks.length,r.length+t.memory.sc):1,p=t.memory.sc;if(t.roleCount("toad")<p){var u=e.spawnCreep(n,m+1);u||(u=e.spawnCreep(n,m))}else if(t.roleCount("frog")<h){var l=e.spawnCreep(a,m+1);l||(l=e.spawnCreep(a,m))}else if(t.roleCount("newt")<y){var R=e.spawnCreep(c,m+1);R||(R=e.spawnCreep(c,m)),R||(R=e.spawnCreep(c,1))}}function tower(e){var t=e.pos.findInRange(FIND_HOSTILE_CREEPS,15);Memory.towers||(Memory.towers={}),Memory.towers[e.id]||(Memory.towers[e.id]={}),Memory.towers[e.id].mode||(Memory.towers[e.id].mode="alert"),e.energy<=900||t.length>0?Memory.towers[e.id].mode="alert":e.energy>900&&(Memory.towers[e.id].mode="repair");var o=Memory.towers[e.id].mode;if("alert"==o){var s=e.room.find(FIND_MY_CREEPS,{filter:function(e){return e.hits<e.hitsMax}});t.length>0?(t.length>1&&t.sort(function(e,t){return e.hits-t.hits}),e.attack(t[0])):s.length>0&&(s.length>1&&s.sort(function(e,t){return e.hits-t.hits}),e.heal(s[0]))}else if("repair"==o){var r=e.room.memory.jobs.fix.tasks;e.repair(Game.getObjectById(r[0]))}else t.length>0&&(t.length>1&&t.sort(function(e,t){return e.hits-t.hits}),e.attack(t[0]))}ConstructionSite.prototype.report=function(){this.createTask("construct")},ConstructionSite.prototype.debrief=function(){return!0},ConstructionSite.prototype.createTask=function(e){this.room.memory.jobs.construct.tasks.push(this.id),this.room.memory.jobs.construct.tasks=[].concat(_toConsumableArray(new Set(this.room.memory.jobs.construct.tasks)))},ConstructionSite.prototype.deleteTask=function(e){this.room.memory.jobs.construct.tasks.indexOf(this.id)>-1&&this.room.memory.jobs.construct.tasks.splice(this.room.memory.jobs.construct.tasks.indexOf(this.id),1)},ConstructionSite.prototype.isTask=function(e){return this.room.memory.jobs.construct.tasks.includes(this.id)},ConstructionSite.prototype.getTaskAt=function(e,t){return this.room.memory.jobs.construct.tasks[e]},ConstructionSite.prototype.getTaskIndex=function(e){return this.room.memory.jobs.construct.tasks.indexOf(this.id)},StructureContainer.prototype.report=function(){this.store.energy>=50&&this.createTask("collect"),this.hits<1e4&&this.createTask("fix")},StructureContainer.prototype.debrief=function(){this.store.energy<50&&this.deleteTask("collect"),this.hits>1e4&&this.deleteTask("fix")},StructureContainer.prototype.createTask=function(e){this.room.memory.jobs[e].tasks.push(this.id),this.room.memory.jobs[e].tasks=[].concat(_toConsumableArray(new Set(this.room.memory.jobs[e].tasks)))},StructureContainer.prototype.deleteTask=function(e){this.room.memory.jobs[e].tasks.indexOf(this.id)||this.room.memory.jobs[e].tasks.splice(this.room.memory.jobs[e].tasks.indexOf(this.id),1)},StructureContainer.prototype.isTask=function(e){return this.room.memory.jobs[e].tasks.includes(this.id)},StructureContainer.prototype.getTaskAt=function(e,t){return this.room.memory.jobs[t].tasks[e]},StructureContainer.prototype.getTaskIndex=function(e){return this.room.memory.jobs[e].tasks.indexOf(this.id)},StructureController.prototype.report=function(){return!0},StructureExtension.prototype.debrief=function(){return!0},Creep.prototype.setWorker=function(e){this.room.memory.jobs[e].workers.push(this.name),this.room.memory.jobs[e].workers=[].concat(_toConsumableArray(new Set(this.room.memory.jobs[e].workers)))},Creep.prototype.getWorkerIndex=function(e){return this.room.memory.jobs[e].workers.indexOf(this.name)},Creep.prototype.deleteWorker=function(e){this.room.memory.jobs[e].workers.indexOf(this.name)>-1&&array.splice(this.room.memory.jobs[e].workers.indexOf(this.name),1)},Creep.prototype.isWorker=function(e){return this.room.memory.jobs[e].workers.includes(this.name)},Creep.prototype.getWorkerAt=function(e,t){return this.room.memory.jobs[t].workers[e]},Creep.prototype.getWorkerIndex=function(e){return this.room.memory.jobs[e].workers.indexOf(this.name)},Creep.prototype.getAssignment=function(e,t){return this.memory.jobs[e]},Creep.prototype.setAssignment=function(e,t){this.memory.jobs[e]=t},Creep.prototype.deleteAssignment=function(e){this.memory.jobs[e]=null},Creep.prototype.deleteAllAssignments=function(){for(var e in this.memory.jobs)this.deleteAssignment(e)},Creep.prototype.debrief=function(){this.carry.energy===this.carryCapacity&&(console.log(this+" deleting "+job),this.deleteTask("deposit")),this.hits===this.hitsMax&&this.deleteTask("fix")},Creep.prototype.manualDelete=function(e,t){this.room.memory.jobs[e].tasks.splice(this.room.memory.jobs[e].tasks.indexOf(t),1),this.memory.jobs[e]=null},Creep.prototype.createTask=function(e){this.room.memory.jobs[e].tasks.push(this.id),this.room.memory.jobs[e].tasks=[].concat(_toConsumableArray(new Set(this.room.memory.jobs[e].tasks)))},Creep.prototype.deleteTask=function(e){this.room.memory.jobs[e].tasks.indexOf(this.id)||this.room.memory.jobs[e].tasks.splice(this.room.memory.jobs[e].tasks.indexOf(this.id),1)},Creep.prototype.isTask=function(e){return this.room.memory.jobs[e].tasks.includes(this.id)},Creep.prototype.getTaskAt=function(e,t){return this.room.memory.jobs[t].tasks[e]},Creep.prototype.getTaskIndex=function(e){return this.room.memory.jobs[e].tasks.indexOf(this.id)},Creep.prototype.assignTask=function(e){this.isWorker(e)||this.setWorker(e);var t=this.getWorkerIndex(e),o=0,s=getTaskAt(t,e,this.room);if(s)return this.setAssignment(e,s),!0;var r=getTasksArray(e,this.room).length,i=getWorkersArray(e,this.room).length;return o=i>r&&i&&r?t%r:t,this.setAssignment(e,getTaskAt(o,e,this.room)),!0},Creep.prototype.collectAura=function(){for(var e in this.room.memory.jobs.collect.tasks)if(0===this.withdraw(Game.getObjectById(this.room.memory.jobs.collect.tasks[e]),RESOURCE_ENERGY))return Memory.emoji.sogood},Creep.prototype.sweepAura=function(){for(var e in this.room.memory.jobs.sweep.tasks)if(0===this.pickup(Game.getObjectById(this.room.memory.jobs.sweep.tasks[e]),RESOURCE_ENERGY))return Memory.emoji.sogood},Creep.prototype.constructAura=function(){for(var e in this.room.memory.jobs.construct.tasks)if(0===this.build(Game.getObjectById(this.room.memory.jobs.construct.tasks[e]),RESOURCE_ENERGY))return Memory.emoji.sogood},Creep.prototype.depositAura=function(){for(var e in this.room.memory.jobs.deposit.tasks)if(Game.getObjectById(this.room.memory.jobs.deposit.tasks[e])){if(0===this.transfer(Game.getObjectById(this.room.memory.jobs.deposit.tasks[e]),RESOURCE_ENERGY))return Memory.emoji.sogood}else this.manualDelete("deposit",e)},Creep.prototype.assignSpot=function(){for(var e in this.room.sources)if(this.room.lastAssignedSource!=e)for(var t in this.room.sources[e].spots){if(!Game.getObjectById(this.room.sources[e].spots[t]))return this.room.sources[e].spots[t]=this.id,this.room.lastAssignedSource=e,e;if(this.memory.priority>Game.getObjectById(this.room.sources[e].spots[t]).memory.priority)return Game.getObjectById(this.room.sources[e].spots[t]).suicide(),this.room.sources[e].spots[t]=this.id,this.room.lastAssignedSource=e,e}return this.pos.findClosestByRange(FIND_SOURCES).id},StructureExtension.prototype.report=function(){this.energy<this.energyCapacity&&this.createTask("deposit"),this.hits<this.hitsMax&&this.createTask("fix")},StructureExtension.prototype.debrief=function(){this.energy===this.energyCapacity&&this.deleteTask("deposit"),this.hits===this.hitsMax&&this.deleteTask("fix")},OwnedStructure.prototype.createTask=function(e){this.room.memory.jobs[e].tasks.push(this.id),this.room.memory.jobs[e].tasks=[].concat(_toConsumableArray(new Set(this.room.memory.jobs[e].tasks)))},OwnedStructure.prototype.deleteTask=function(e){this.room.memory.jobs[e].tasks.indexOf(this.id)||this.room.memory.jobs[e].tasks.splice(this.room.memory.jobs[e].tasks.indexOf(this.id),1)},OwnedStructure.prototype.isTask=function(e){return this.room.memory.jobs[e].tasks.includes(this.id)},OwnedStructure.prototype.getTaskIndex=function(e){return this.room.memory.jobs[e].tasks.indexOf(this.id)},Resource.prototype.report=function(){this.createTask("sweep")},Resource.prototype.debrief=function(e){this.deleteTask("sweep")},Resource.prototype.createTask=function(e){this.room.memory.jobs.sweep.tasks.push(this.id),this.room.memory.jobs.sweep.tasks=[].concat(_toConsumableArray(new Set(this.room.memory.jobs.sweep.tasks)))},Resource.prototype.deleteTask=function(e){this.room.memory.jobs.sweep.tasks.indexOf(this.id)>-1&&this.room.memory.jobs.sweep.tasks.splice(this.room.memory.jobs.sweep.tasks.indexOf(this.id),1)},Resource.prototype.isTask=function(e){return this.room.memory.jobs.sweep.tasks.includes(this.id)},Resource.prototype.getTaskIndex=function(e){return this.room.memory.jobs.sweep.tasks.indexOf(this.id)},Room.prototype.roleCount=function(e){return this.find(FIND_MY_CREEPS,{filter:function(t){return t.memory.role==e}}).length},Room.prototype.miningSpots=function(e){var t=this,o=0,s=[];return e.forEach(function(e){var r=e.id;t.memory.jobs.mine.tasks.push(r),s=t.lookForAtArea("terrain",e.pos.y-1,e.pos.x-1,e.pos.y+1,e.pos.x+1,!0);for(var i=0;i<s.length;i++)"plain"!=s[i].terrain&&"swamp"!=s[i].terrain||(o++,t.memory.sources||(t.memory.sources={}),t.memory.sources[r]||(t.memory.sources[r]={}),t.memory.sources[r].spots||(t.memory.sources[r].spots={}),t.memory.sources[r].spots[o]||(t.memory.sources[r].spots[o]="empty"))}),o},StructureSpawn.prototype.report=function(){this.energy<this.energyCapacity&&this.createTask("deposit"),this.hits<this.hitsMax&&this.createTask("fix")},StructureSpawn.prototype.debrief=function(){this.energy===this.energyCapacity&&this.deleteTask("deposit"),this.hits===this.hitsMax&&this.deleteTask("fix")},StructureSpawn.prototype.spawnCreep=function(e,t){switch(this.createCreep(e.parts[t],(new Date).getUTCMilliseconds(),e.options)){case-3:console.log("There is already a creep with this name");break;case-10:console.log("Body part array not properly formed: "),console.log(JSON.stringify(e.parts[t]));break;case-14:console.log("RCL no longer sufficient to use this spawn")}},StructureStorage.prototype.report=function(){this.store.energy>=50&&this.createTask("collect"),this.hits<this.hitsMax&&this.createTask("fix")},StructureStorage.prototype.debrief=function(){0===this.store.energy&&this.deleteTask("collect"),this.hits===this.hitsMax&&this.deleteTask("fix")},StructureTower.prototype.report=function(){this.energy<this.energyCapacity&&this.createTask("deposit"),this.hits<this.hitsMax&&this.createTask("fix")},StructureTower.prototype.debrief=function(){this.energy===this.energyCapacity&&this.deleteTask("deposit"),this.hits===this.hitsMax&&this.deleteTask("fix")},Creep.prototype.frog=function(){return 0===this.carry.energy&&(this.memory.state=0),this.carry.energy<this.carryCapacity?this.createTask("deposit"):this.carry.energy===this.carryCapacity&&(this.memory.state=1,this.deleteTask("deposit")),this.constructAura(),this.memory.state?(this.collectAura(),this.sweepAura(),this.depositAura(),this.construct()):(this.collectAura(),this.sweepAura(),this.collect())},Creep.prototype.newt=function(){return this.carry.energy<this.carryCapacity?this.memory.state=0:this.carry.energy===this.carryCapacity&&(this.memory.state=1),this.memory.state?this.deposit():this.collect()},Creep.prototype.toad=function(){if(0===this.carry.energy?this.memory.state=0:this.carry.energy>=40&&(this.memory.state=1),this.memory.state){if(!this.memory.builtcontainer){if(0===this.room.createConstructionSite(this.pos,STRUCTURE_CONTAINER)||this.room.lookForAt(LOOK_CONSTRUCTION_SITES,this.pos).length)return this.memory.builtcontainer=1,Memory.emoji.frog;this.memory.builtcontainer=2}return 1!=this.memory.builtcontainer?this.mine():this.room.memory.jobs.construct.tasks.length?this.construct():(this.memory.builtcontainer=null,Memory.emoji.frog)}return this.mine()},Memory.recipes||(Memory.emoji={frog:"🐸",construct:"🛠️️",fix:"🏗️🏚️",mine:"💰",upgrade:"⚡",eat:"🍽️",deposit:"✨",collect:"✨",oops:"☠️",whack:"⚔️",pew:"🔫",aid:"💊",pickup:"✨",suicide:"💮",sogood:"✨💨🐸✨",hop:"💨"},Memory.recipes={},Memory.recipes.frog={parts:{1:[MOVE,CARRY,MOVE,WORK],2:[MOVE,CARRY,MOVE,WORK],3:[MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK],4:[MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK],5:[MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK],6:[MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK],7:[MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK],8:[MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK]},options:{role:"frog",resourceType:RESOURCE_ENERGY,jobs:{construct:null,collect:null,fix:null,sweep:null,mine:null,eat:null,upgrade:null}}},Memory.recipes.newt={parts:{1:[MOVE,CARRY,MOVE,CARRY],2:[MOVE,CARRY,MOVE,CARRY],3:[MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY],4:[MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY],5:[MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY],6:[MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY],7:[MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY],8:[MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,CARRY,CARRY,CARRY,CARRY,CARRY,CARRY,CARRY,CARRY]},options:{role:"newt",resourceType:RESOURCE_ENERGY,jobs:{deposit:null,collect:null,sweep:null,eat:null}}},Memory.recipes.toad={parts:{1:[MOVE,WORK,CARRY,WORK],2:[MOVE,WORK,CARRY,WORK],3:[MOVE,WORK,WORK,MOVE,WORK,WORK,CARRY],4:[MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,CARRY],5:[MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,CARRY],6:[MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,CARRY],7:[MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,CARRY],8:[MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,CARRY]},options:{role:"toad",resourceType:RESOURCE_ENERGY,builtcontainer:0,jobs:{construct:null,fix:null,sweep:null,mine:null,eat:null,upgrade:null}}}),module.exports.loop=function(){for(var e in Game.structures){var t=Game.structures[e];switch(t.structureType){case"spawn":t.memory.queen&&queen(t);break;case"tower":tower(t)}t.report()}for(var o in Game.constructionSites)Game.getObjectById(o).room.memory.jobs.construct.tasks.push(o),Game.getObjectById(o).room.memory.jobs.construct.tasks=[].concat(_toConsumableArray(new Set(Game.getObjectById(o).room.memory.jobs.construct.tasks)));for(var s in Memory.creeps)if(!Game.creeps[s]&&[].concat(_toConsumableArray(Game.creeps)).length+2>[].concat(_toConsumableArray(Memory.creeps)).length)console.log("DEAD: "+s),console.log(JSON.stringify(Memory.creeps[s])),deleteWorkerAll(Memory.creeps[s],Memory.creeps[s].room,s),delete Memory.creeps[s];else if(Game.creeps[s]){var r=Game.creeps[s];switch(r.memory.room||(r.memory.room=r.room.name),r.memory.role){case"redspawn":redspawn(r);break;case"tadpole":tadpole(r);break;case"frog":r.say(r.frog());break;case"toad":r.depositAura(),r.sweepAura(),r.say(r.toad());break;case"newt":r.collectAura(),r.sweepAura(),r.say(r.newt()),r.depositAura();break;case"squatter":squatter(r);break;case"poliwog":poliwog(r)}}},Creep.prototype.aid=function(){this.room.memory.jobs.aid.tasks.indexOf(this.memory.jobs.aid)||this.assignTask("aid");try{Game.getObjectById(this.memory.jobs.aid).debrief()}catch(e){this.room.memory.jobs.aid.tasks.length&&Game.getObjectById(this.memory.jobs.aid).deleteTask("aid")}switch(this.heal(Game.getObjectById(this.memory.jobs.aid))){case 0:return Memory.emoji.aid;case-7:return Game.getObjectById(this.memory.jobs.aid).deleteTask("aid"),this.deleteAssignment("aid"),getTasksArray("aid").length?(this.assignTask("aid"),Memory.emoji.oops+Memory.emoji.aid+Memory.emoji.oops):this.eat();case-9:return this.moveTo(Game.getObjectById(this.memory.jobs.aid),{visualizePathStyle:{fill:"transparent",stroke:"#ffaaaa",lineStyle:"solid",strokeWidth:.15,opacity:.1}}),Memory.emoji.aid;case-12:return this.deleteAssignment("aid"),this.deleteWorker("aid"),Memory.emoji.oops+Memory.emoji.aid+Memory.emoji.oops}},Creep.prototype.collect=function(){this.memory.jobs.collect||this.assignTask("collect");try{Game.getObjectById(this.memory.jobs.collect).debrief()}catch(e){this.room.memory.jobs.collect.tasks.length&&this.manualDelete("collect",this.memory.jobs.collect)}switch(this.withdraw(Game.getObjectById(this.memory.jobs.collect),RESOURCE_ENERGY)){case 0:return Game.getObjectById(this.memory.jobs.collect).debrief(),Memory.emoji.collect;case-6:case-7:case-10:return this.deleteAssignment("collect"),getTasksArray("collect",this.room).length?Memory.emoji.oops+Memory.emoji.collect+Memory.emoji.oops:"frog"==this.memory.role||"toad"==this.role?this.mine():this.sweep();case-8:return this.memory.state=1,Memory.emoji.frog;case-9:return-2==this.moveTo(Game.getObjectById(this.memory.jobs.collect),{reusePath:1,visualizePathStyle:{fill:"transparent",stroke:"#eeff99",lineStyle:"dashed",strokeWidth:.15,opacity:.1}})&&this.assignTask("collect"),Memory.emoji.hop}return Memory.emoji.oops},Creep.prototype.construct=function(){this.memory.jobs.construct||this.assignTask("construct");try{Game.getObjectById(this.memory.jobs.construct).debrief()}catch(e){this.room.memory.jobs.construct.tasks.length&&this.manualDelete("construct",this.memory.jobs.construct)}switch(this.build(Game.getObjectById(this.memory.jobs.construct))){case 0:return Memory.emoji.construct;case-6:return this.memory.state=0,Memory.emoji.frog;case-7:return this.deleteAssignment("construct"),getTasksArray("construct",this.room).length?(this.assignTask("construct"),Memory.emoji.construct):this.upgrade();case-9:return this.moveTo(Game.getObjectById(this.memory.jobs.construct),{visualizePathStyle:{fill:"transparent",stroke:"#aacc66",lineStyle:"solid",strokeWidth:.15,opacity:.1}}),Memory.emoji.frog;case-12:return this.deleteAssignment("construct"),this.deleteWorker("construct"),Memory.emoji.oops+Memory.emoji.construct+Memory.emoji.oops;case-14:return Game.getObjectById(this.memory.jobs.construct).remove(),Memory.emoji.oops+Memory.emoji.construct+Memory.emoji.oops}},Creep.prototype.deposit=function(){this.memory.jobs.deposit||this.assignTask("deposit");try{Game.getObjectById(this.memory.jobs.deposit).debrief()}catch(e){this.room.memory.jobs.deposit.tasks.length&&this.manualDelete("deposit",this.memory.jobs.deposit)}switch(this.transfer(Game.getObjectById(this.memory.jobs.deposit),RESOURCE_ENERGY)){case 0:return Memory.emoji.deposit;case-7:case-8:case-10:return getTasksArray("deposit",this.room).length?(this.assignTask("deposit"),Memory.emoji.oops+Memory.emoji.deposit+Memory.emoji.oops):_.includes(this.body,WORK)?this.upgrade():this.eat();case-6:return this.memory.state=0,Memory.emoji.frog;case-9:return this.moveTo(Game.getObjectById(this.memory.jobs.deposit),{reusePath:10,visualizePathStyle:{fill:"transparent",stroke:"#eecc00",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),Memory.emoji.frog}},Creep.prototype.eat=function(){switch(this.memory.jobs.eat||this.assignTask("eat"),this.transfer(Game.getObjectById(this.memory.jobs.eat),RESOURCE_ENERGY),Game.getObjectById(this.memory.jobs.eat).renewCreep(this)){case 0:return Memory.emoji.eat;case-6:case-7:case-8:return this.move(Math.floor(8*Math.random())),Memory.emoji.oops+Memory.emoji.eat+Memory.emoji.oops;case-9:return this.moveTo(Game.getObjectById(this.memory.jobs.eat),{visualizePathStyle:{fill:"transparent",stroke:"#00eeff",lineStyle:"solid",strokeWidth:.15,opacity:.1}}),Memory.emoji.frog}},Creep.prototype.sacrifice=function(){return Game.getObjectById(this.memory.jobs.eat).recycleCreep(this)},Creep.prototype.fix=function(){this.memory.jobs.fix||this.assignTask("fix");try{Game.getObjectById(this.memory.jobs.fix).debrief()}catch(e){this.room.memory.jobs.fix.tasks.length&&Game.getObjectById(this.memory.jobs.construct).deleteTask("fix")}switch(this.repair(Game.getObjectById(this.memory.jobs.fix))){case 0:return Memory.emoji.fix;case-6:return this.memory.state=0,Memory.emoji.frog;case-7:return Game.getObjectById(this.memory.jobs.fix).deleteTask("fix"),(this.deleteAssignment("fix"),getTasksArray("fix").length)?(this.assignTask("fix"),Memory.emoji.oops+Memory.emoji.fix+Memory.emoji.oops):(this.memory.state=0,Memory.emoji.oops+Memory.emoji.fix+Memory.emoji.oops);case-9:return this.moveTo(Game.getObjectById(this.memory.jobs.fix),{visualizePathStyle:{fill:"transparent",stroke:"#ffaaaa",lineStyle:"solid",strokeWidth:.15,opacity:.1}}),Memory.emoji.fix;case-12:return this.deleteAssignment("fix"),this.deleteWorker("fix"),Memory.emoji.oops+Memory.emoji.fix+Memory.emoji.oops}},Creep.prototype.mine=function(){try{switch(this.harvest(Game.getObjectById(this.memory.jobs.mine))){case 0:if(this.room.rcl>1&&0===this.upgradeController(this.room.controller))return Memory.emoji.sogood;if("toad"==this.role){var e=Game.getObjectById(this.memory.jobs.mine),t=e.pos.findInRange(FIND_STRUCTURES,2,{filter:function(e){return e.structureType==STRUCTURE_CONTAINER}});if(t.length&&(this.memory.container=t[0].id),this.memory.container&&!this.pos.isEqualTo(this.memory.container.pos))return this.moveTo(Game.getObjectById(this.memory.container)),Memory.emoji.hop}return Memory.emoji.mine;case-5:case-7:return this.assignTask("mine"),Memory.emoji.oops+Memory.emoji.mine+Memory.emoji.oops;case-6:return"toad"==this.memory.role?this.eat():"frog"==this.memory.role?this.sweep():Memory.emoji.oops+Memory.emoji.mine+Memory.emoji.oops;case-9:return this.moveTo(Game.getObjectById(this.memory.jobs.mine),{visualizePathStyle:{reusePath:10,fill:"transparent",stroke:"#eeff99",lineStyle:"solid",strokeWidth:.15,opacity:.1}}),Memory.emoji.hop;case-12:return this.deleteWorker("mine"),this.deleteAssignment("mine"),Memory.emoji.oops+Memory.emoji.mine+Memory.emoji.oops}}catch(e){this.assignTask("mine")}},Creep.prototype.sweep=function(){this.memory.jobs.sweep||this.assignTask("sweep");try{Game.getObjectById(this.memory.jobs.sweep).debrief()}catch(e){this.room.memory.jobs.sweep.tasks.length&&this.manualDelete("sweep",this.memory.sweep)}switch(this.pickup(Game.getObjectById(this.memory.jobs.sweep))){case 0:return Memory.emoji.sweep;case-7:case-8:return this.deleteAssignment("sweep"),getTasksArray("sweep",this.room).length?(this.assignTask("sweep"),Memory.emoji.oops+Memory.emoji.sweep+Memory.emoji.oops):_.includes(this.body,WORK)?this.upgrade():this.eat();case-9:return this.moveTo(Game.getObjectById(this.memory.jobs.sweep),{visualizePathStyle:{fill:"transparent",stroke:"#eecc00",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),Memory.emoji.frog}},Creep.prototype.upgrade=function(){switch(this.upgradeController(Game.getObjectById(this.memory.jobs.upgrade))){case 0:return Memory.emoji.upgrade;case-6:return this.memory.state=0,Memory.emoji.oops+Memory.emoji.upgrade+Memory.emoji.oops;case-7:return this.deleteAssignment("upgrade"),getTasksArray("upgrade",this.room).length&&this.assignTask("upgrade"),Memory.emoji.oops+Memory.emoji.upgrade+Memory.emoji.oops;case-9:return this.moveTo(Game.getObjectById(this.memory.jobs.upgrade),{visualizePathStyle:{fill:"transparent",stroke:"#ffffff",lineStyle:"solid",strokeWidth:.15,opacity:.1}}),Memory.emoji.frog}},Creep.prototype.whack=function(){this.memory.jobs.whack||this.assignTask("whack");try{Game.getObjectById(this.memory.jobs.whack).debrief()}catch(e){this.room.memory.jobs.whack.tasks.length&&this.manualDelete("whack",this.memory.whack)}switch(this.attack(Game.getObjectById(this.memory.jobs.whack))){case 0:return Game.getObjectById(this.memory.jobs.whack).deleteTask("whack"),Memory.emoji.whack;case-7:return Game.getObjectById(this.memory.jobs.whack).deleteTask("whack"),this.deleteAssignment("whack"),getTasksArray("whack").length?(this.assignTask("whack"),Memory.emoji.oops+Memory.emoji.whack+Memory.emoji.oops):(this.eat(),Memory.emoji.oops+Memory.emoji.whack+Memory.emoji.oops);case-9:return this.moveTo(Game.getObjectById(this.memory.jobs.whack),{visualizePathStyle:{fill:"transparent",stroke:"#ff0000",lineStyle:"solid",strokeWidth:.15,opacity:.1}}),Memory.emoji.whack;case-12:return this.deleteAssignment("whack"),this.deleteWorker("whack"),Memory.emoji.oops+Memory.emoji.whack+Memory.emoji.oops}};