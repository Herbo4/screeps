"use strict";function initialize(e){Memory.rooms[e.name]={},Memory.rooms[e.name].sc||(Memory.rooms[e.name].sc=findSources(e).length),Memory.rooms[e.name].pc||(Memory.rooms[e.name].pc=3e3*Memory.rooms[e.name].sc),Memory.rooms[e.name].pt||(Memory.rooms[e.name].pt=Math.ceil(Memory.rooms[e.name].pc/300)),Memory.rooms[e.name].miningSpots||(Memory.rooms[e.name].miningSpots=e.miningSpots())}function findSources(e){return e.find(FIND_SOURCES)}function spawner(e){var r=e.room;Memory.rooms[r.name]||initialize(r);var o=r.controller.level;e.memory.creepList={redspawn:{count:o<3?Memory.rooms[r.name].miningSpots+1:2,parts:[MOVE,CARRY,MOVE,WORK],options:{role:"redspawn",important:"mine",upgrade:r.controller.id,resourceType:RESOURCE_ENERGY,max:o<3?Memory.rooms[r.name].miningSpots+1:2,priority:1}},tadpole:{count:r.miningSpots()<=6*Memory.rooms[r.name].sc?r.miningSpots():6*Memory.rooms[r.name].sc,parts:[MOVE,MOVE,MOVE,CARRY,CARRY,CARRY,WORK,WORK],options:{role:"tadpole",important:"mine",upgrade:r.controller.id,resourceType:RESOURCE_ENERGY,priority:2}},frog:{count:2*Memory.rooms[r.name].sc+1,parts:[MOVE,MOVE,MOVE,MOVE,CARRY,CARRY,CARRY,CARRY,WORK,WORK,WORK,WORK],options:{role:"frog",important:"gather",upgrade:r.controller.id,resourceType:RESOURCE_ENERGY,priority:3}},toad:{count:Memory.rooms[r.name].sc,parts:o<6?[MOVE,MOVE,MOVE,CARRY,WORK,WORK,WORK,WORK,WORK,WORK]:[MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,CARRY,WORK,WORK,WORK,WORK,WORK,WORK,WORK,WORK,WORK,WORK,WORK,WORK,WORK,WORK,WORK],options:{role:"toad",important:"mine",resourceType:RESOURCE_ENERGY,home:e.id,renew:!0,priority:r.rcl<6?3:4}},newt:{count:2,parts:[MOVE,MOVE,MOVE,MOVE,MOVE,CARRY,CARRY,CARRY,CARRY,CARRY,CARRY,CARRY,CARRY,CARRY,CARRY],options:{role:"newt",important:"gather",resourceType:RESOURCE_ENERGY,priority:3}}};var t=e.memory.creepList.redspawn,n=e.memory.creepList.tadpole,a=e.memory.creepList.frog,m=e.memory.creepList.toad,s=e.memory.creepList.newt;switch(o){case 1:r.roleCount("redspawn")<t.count&&e.createCreep(t.parts,Game.time+"_"+t.options.role,t.options);break;case 2:r.roleCount("redspawn")<t.count-r.roleCount("tadpole")&&e.createCreep(t.parts,Game.time+"_"+t.options.role,t.options),r.roleCount("tadpole")<n.count&&e.createCreep(n.parts,Game.time+"_"+n.options.role,n.options);break;case 3:r.roleCount("redspawn")<t.count-r.roleCount("newt")&&e.createCreep(t.parts,Game.time+"_"+t.options.role,t.options),r.roleCount("tadpole")<n.count-6*r.roleCount("toad")&&e.createCreep(n.parts,Game.time+"_"+n.options.role,n.options),r.roleCount("toad")<m.count?e.createCreep(m.parts,Game.time+"_"+m.options.role,m.options):r.roleCount("newt")<s.count?e.createCreep(s.parts,Game.time+"_"+s.options.role,s.options):r.roleCount("frog")<a.count&&e.createCreep(a.parts,Game.time+"_"+a.options.role,a.options);break;case 4:r.roleCount("toad")<m.count?e.createCreep(m.parts,Game.time+"_"+m.options.role,m.options):r.roleCount("newt")<2?e.createCreep(s.parts,Game.time+"_"+s.options.role,s.options):r.roleCount("frog")<a.count&&e.createCreep(a.parts,Game.time+"_"+a.options.role,a.options);break;case 5:case 6:r.roleCount("toad")<m.count?e.createCreep(m.parts,Game.time+"_"+m.options.role,m.options):r.roleCount("newt")<s.count?e.createCreep(s.parts,Game.time+"_"+s.options.role,s.options):r.roleCount("frog")<a.count&&e.createCreep(a.parts,Game.time+"_"+a.options.role,a.options)}}function build(e){e.memory.colony?e.memory.target=Game.getObjectById(e.memory.colony):e.memory.target=e.pos.findClosestByRange(FIND_CONSTRUCTION_SITES),e.memory.target&&null!==e.memory.target?e.build(e.memory.target)==ERR_NOT_IN_RANGE&&(e.moveTo(e.memory.target),e.build(e.memory.target)):e.upgradeController(e.room.controller)==ERR_NOT_IN_RANGE&&(e.moveTo(e.room.controller),e.upgradeController(e.room.controller)),e.moveTo(e.memory.target)}function deposit(e){var r=e.memory.resourceType;for(var o in e.memory.to)if(e.memory.to[o]){var t=Game.getObjectById(e.memory.to[o]);if(t.energy<t.energyCapacity||_.sum(t.carry)<t.carryCapacity||_.sum(t.store)<t.storeCapacity)return e.transfer(t,r)==ERR_NOT_IN_RANGE&&(e.moveTo(t),e.transfer(t,r)),!0;e.moveTo(t)}}function eat(e){var r=Game.getObjectById(e.memory.home);switch(r.renewCreep(e)==ERR_NOT_IN_RANGE&&e.moveTo(r),r.renewCreep(e)){case 0:e.say("NOM",!0);break;case-1:e.say("¯\\_(ツ)_/¯",!1);break;case-4:e.say("Waiting",!1);break;case-6:e.say("Empty",!1),e.memory.important="mine";break;case-7:e.say("Bad Target",!1);break;case-8:e.memory.important="mine"}}function gather(e){var r=e.memory.resourceType,o=_.max(e.memory.from,function(e){return Game.getObjectById(e).store[RESOURCE_ENERGY]}),t=Game.getObjectById(o);if(t){if(t.store[r]>=50)return e.withdraw(t,r)==ERR_NOT_IN_RANGE&&(e.moveTo(t),e.withdraw(t,r)),!0;e.moveTo(Game.getObjectById(e.memory.from[0]))}else e.moveTo(Game.getObjectById(e.memory.from[0]))}function assignSpot(e){for(var r in Memory.rooms[e.room.name].sources)if(Memory.rooms[e.room.name].lastAssignedSource!=r)for(var o in Memory.rooms[e.room.name].sources[r].spots){if(!Game.getObjectById(Memory.rooms[e.room.name].sources[r].spots[o]))return Memory.rooms[e.room.name].sources[r].spots[o]=e.id,Memory.rooms[e.room.name].lastAssignedSource=r,r;if(e.memory.priority>Game.getObjectById(Memory.rooms[e.room.name].sources[r].spots[o]).memory.priority)return Game.getObjectById(Memory.rooms[e.room.name].sources[r].spots[o]).suicide(),Memory.rooms[e.room.name].sources[r].spots[o]=e.id,Memory.rooms[e.room.name].lastAssignedSource=r,r}return e.pos.findClosestByRange(FIND_SOURCES).id}function mine(e){e.memory.mine||(e.memory.mine=assignSpot(e));var r=Game.getObjectById(e.memory.mine);switch(e.harvest(r)){case 0:if(e.say("$",!0),e.memory.to&&"toad"==e.memory.role){var o=Game.getObjectById(e.memory.to);e.moveTo(o),e.upgradeController(e.room.controller),e.transfer(o,e.memory.resourceType)<0&&e.transfer(e.room.storage,e.memory.resourceType)<0&&e.upgradeController(e.room.controller)}else"toad"==e.memory.role&&e.upgradeController(e.room.controller);break;case-1:e.say("¯\\_(ツ)_/¯",!1);break;case-4:e.say("I'm busy",!1);break;case-5:e.say("¯\\_(ツ)_/¯",!1);break;case-6:e.say("Empty",!1),e.moveTo(r),!0===e.memory.renew&&e.ticksToLive<1e3&&(e.memory.important="eat");break;case-7:e.say("Bad Target",!1);break;case-9:return e.moveTo(r),e.harvest(r);case-12:e.say("¯\\_(ツ)_/¯",!1)}}function upgrade(e){e.upgradeController(e.room.controller)==ERR_NOT_IN_RANGE&&(e.moveTo(e.room.controller),e.upgradeController(e.room.controller))}function Callback(){this.handlers=[]}function count_source_containers(e){var r=e.find(FIND_SOURCES),o=0,t=!0,n=!1,a=void 0;try{for(var m,s=r[Symbol.iterator]();!(t=(m=s.next()).done);t=!0){var i=m.value,c=i.pos.findInRange(FIND_STRUCTURES,2,{filter:function(e){return e.structureType==STRUCTURE_CONTAINER}}),l=!0,u=!1,y=void 0;try{for(var p,R=c[Symbol.iterator]();!(l=(p=R.next()).done);l=!0){p.value.pos.getRangeTo(i)>=2||o++}}catch(e){u=!0,y=e}finally{try{!l&&R.return&&R.return()}finally{if(u)throw y}}}}catch(e){n=!0,a=e}finally{try{!t&&s.return&&s.return()}finally{if(n)throw a}}return o}function summarize_room_internal(e){if(_.isString(e)&&(e=Game.rooms[e]),null===e)return null;if(null===e.controller||!e.controller.my)return null;var r=e.controller.level,o=e.controller.progress,t=e.controller.progressTotal,n=e.controller.ticksToDowngrade,a=e.controller.upgradeBlocked,m=e.controller.safeMode?e.controller.safeMode:0,s=e.controller.safeModeAvailable,i=e.controller.safeModeCooldown,c=null!==e.storage,l=e.storage?e.storage.store[RESOURCE_ENERGY]:0,u=e.storage?_.sum(e.storage.store)-l:0,y=e.energyAvailable,p=e.energyCapacityAvailable,R=e.find(FIND_STRUCTURES,{filter:function(e){return e.structureType==STRUCTURE_CONTAINER}}),f=null===R?0:R.length,d=_.sum(R,function(e){return e.store.energy}),g=e.find(FIND_SOURCES),E=null===g?0:g.length,C=_.sum(g,function(e){return e.energy}),T=e.find(FIND_STRUCTURES,{filter:function(e){return e.structureType==STRUCTURE_LINK&&e.my}}),O=null===T?0:T.length,S=_.sum(T,function(e){return e.energy}),h=e.find(FIND_MINERALS),I=h&&h.length>0?h[0]:null,M=I?I.mineralType:"",N=I?I.mineralAmount:0,v=e.find(FIND_STRUCTURES,{filter:function(e){return e.structureType==STRUCTURE_EXTRACTOR}}),w=v.length,U=_.filter(Game.creeps,function(r){return r.pos.roomName==e.name&&r.my}),b=U?U.length:0,G=e.find(FIND_HOSTILE_CREEPS),D=_.sum(Game.creeps,function(r){return r.pos.roomName==e.name?r.carry.energy:0}),A=G?G.length:0,k=e.find(FIND_MY_SPAWNS),Y=k?k.length:0,F=_.sum(k,function(e){return e.spawning?1:0}),W=e.find(FIND_STRUCTURES,{filter:function(e){return e.structureType==STRUCTURE_TOWER&&e.my}}),K=W?W.length:0,V=_.sum(W,function(e){return e.energy}),B=e.find(FIND_CONSTRUCTION_SITES),x=e.find(FIND_CONSTRUCTION_SITES,{filter:function(e){return e.my}}),j=B.length,z=x.length,L=count_source_containers(e),P=null!==e.terminal,q=e.terminal?e.terminal.store[RESOURCE_ENERGY]:0,X=e.terminal?_.sum(e.terminal.store)-q:0,H=new Set(e.find(FIND_STRUCTURES).map(function(e){return e.structureType})),$={},J=!0,Q=!1,Z=void 0;try{for(var ee,re=function(){var r=ee.value,o=e.find(FIND_STRUCTURES,{filter:function(e){return e.structureType==r}});$[r]={count:o.length,min_hits:_.min(o,"hits").hits,max_hits:_.max(o,"hits").hits}},oe=H[Symbol.iterator]();!(J=(ee=oe.next()).done);J=!0)re()}catch(e){Q=!0,Z=e}finally{try{!J&&oe.return&&oe.return()}finally{if(Q)throw Z}}var te=e.find(FIND_DROPPED_RESOURCES),ne=_.reduce(te,function(e,r){return e[r.resourceType]=_.get(e,[r.resourceType],0)+r.amount,e},{}),ae=_.countBy(U,function(e){return e.memory.role});return{room_name:e.name,controller_level:r,controller_progress:o,controller_needed:t,controller_downgrade:n,controller_blocked:a,controller_safemode:m,controller_safemode_avail:s,controller_safemode_cooldown:i,energy_avail:y,energy_cap:p,num_sources:E,source_energy:C,mineral_type:M,mineral_amount:N,num_extractors:w,has_storage:c,storage_energy:l,storage_minerals:u,has_terminal:P,terminal_energy:q,terminal_minerals:X,num_containers:f,container_energy:d,num_links:O,link_energy:S,num_creeps:b,creep_counts:ae,creep_energy:D,num_enemies:A,num_spawns:Y,spawns_spawning:F,num_towers:K,tower_energy:V,structure_info:$,num_construction_sites:j,num_my_construction_sites:z,ground_resources:ne,num_source_containers:L}}function summarize_rooms(){var e=Game.time;if(global.summarized_room_timestamp==e)return global.summarized_rooms;var r={};for(var o in Game.rooms){var t=summarize_room_internal(Game.rooms[o]);r[o]=t}return global.summarized_room_timestamp=e,global.summarized_rooms=r,r}function summarize_room(e){return _.isString(e)&&(e=Game.rooms[e]),null===e?null:summarize_rooms()[e.name]}function add_stats_callback(e){global.stats_callbacks.subscribe(e)}function collect_stats(){null===Memory.stats&&(Memory.stats={tick:Game.time}),Memory.stats.cpu=Game.cpu,Memory.stats.gcl=Game.gcl;var e=RawMemory.get().length;Memory.stats.memory={used:e},Memory.stats.market={credits:Game.market.credits,num_orders:Game.market.orders?Object.keys(Game.market.orders).length:0},Memory.stats.roomSummary=summarize_rooms(),global.stats_callbacks.fire(Memory.stats)}function act(e){switch(e.memory.important){case"build":build(e);break;case"deposit":deposit(e);break;case"eat":eat(e);break;case"gather":gather(e);break;case"mine":mine(e);break;case"upgrade":upgrade(e)}}function gatherAura(e){var r=e.pos.findInRange(FIND_DROPPED_RESOURCES,1,{filter:function(e){return e.resourceType==RESOURCE_ENERGY}}),o=e.pos.findInRange(FIND_STRUCTURES,1,{filter:function(e){return e.structureType==STRUCTURE_CONTAINER}}),t=e.pos.findInRange(FIND_STRUCTURES,1,{filter:function(e){return e.structureType==STRUCTURE_STORAGE}});"newt"!=e.memory.role&&"toad"!=e.memory.role&&0===e.withdraw(t[0],RESOURCE_ENERGY)&&e.say("shinies"),"toad"!=e.memory.role&&0===e.withdraw(o[0],RESOURCE_ENERGY)&&e.say("shinies"),0===e.pickup(r[0])&&e.say("shinies")}function depositAura(e){var r=e.pos.findInRange(FIND_MY_STRUCTURES,1,{filter:function(e){return e.structureType==STRUCTURE_EXTENSION}});for(var o in r)0===e.transfer(r[o],RESOURCE_ENERGY)&&e.say("teehee")}function frog(e){if(!e.memory.from){var r=e.room,o=r.containerIDs(),t=r.storageIDs();t=t.concat(o),e.memory.from=t}0===e.carry.energy?e.memory.important="gather":e.carry.energy==e.carryCapacity&&(e.memory.important="build"),act(e),gatherAura(e)}function newt(e){if(depositAura(e),!e.memory.to){var r=e.room,o=r.extensionIDs(),t=r.spawnerIDs(),n=r.towerIDs(),a=r.roleIDs("frog"),m=t.concat(o);m=m.concat(n),m=m.concat(a),e.memory.to=m}if(!e.memory.from){var s=e.room,i=s.storageIDs(),c=s.containerIDs(),l=i.concat(c);e.memory.from=[_.max(l,function(e){return Game.getObjectById(e).store[RESOURCE_ENERGY]})]}0===e.carry.energy?e.memory.important="gather":e.carry.energy===e.carryCapacity&&(e.memory.important="deposit"),act(e),depositAura(e),gatherAura(e)}function redspawn(e){if(depositAura(e),e.room.extensionIDs().length<5)if(_(Memory.creeps).filter({role:"redspawn"},{room:e.room.name}).size()<e.memory.max){if(!e.memory.to){var r=e.room,o=r.extensionIDs(),t=r.spawnerIDs(),n=t.concat(o);e.memory.to=n}0===e.carry.energy?e.memory.important="mine":e.carry.energy===e.carryCapacity&&(e.memory.important="deposit")}else 0===e.carry.energy?e.memory.important="mine":e.carry.energy===e.carryCapacity&&(e.memory.important="build");else{if(e.memory.reset||(e.memory.resetTo=!0,e.memory.to=null),!e.memory.to){var a=e.room,m=a.extensionIDs(),s=a.spawnerIDs(),i=s.concat(m);e.memory.to=i}e.room.energyAvailable==e.room.energyCapacityAvailable?0===e.carry.energy?e.memory.important="mine":e.carry.energy===e.carryCapacity&&(e.memory.important="build"):0===e.carry.energy?e.memory.important="mine":e.carry.energy===e.carryCapacity&&(e.memory.important="deposit")}act(e),gatherAura(e)}function squatter(e){var r=Game.flags.claim;r?(e.moveTo(r),e.room===Game.flags.claim.room&&e.claimController(e.room.controller)==ERR_NOT_IN_RANGE&&e.moveTo(e.room.controller)):Game.getObjectById(e.memory.home).recycleCreep(e)==ERR_NOT_IN_RANGE&&e.moveTo(Game.getObjectById(e.memory.home))}function spawnSquatter(){Game.spawns.Spawn1.createCreep([CLAIM,MOVE],Game.time+"_squatter")}function tadpole(e){if(e.room.extensionIDs().length<10)if(_(Memory.creeps).filter({role:"tadpole"},{room:e.room.name}).size()<e.memory.max){if(!e.memory.to){var r=e.room,o=r.extensionIDs(),t=r.spawnerIDs(),n=t.concat(o);e.memory.to=n}0===e.carry.energy?e.memory.important="mine":e.carry.energy===e.carryCapacity&&(e.memory.important="deposit")}else 0===e.carry.energy?e.memory.important="mine":e.carry.energy===e.carryCapacity&&(e.memory.important="build");else{if(e.memory.reset||(e.memory.resetTo=!0,e.memory.to=null),!e.memory.to){var a=e.room,m=a.extensionIDs(),s=a.spawnerIDs(),i=s.concat(m);e.memory.to=i}e.room.energyAvailable==e.room.energyCapacityAvailable?0===e.carry.energy?e.memory.important="mine":e.carry.energy===e.carryCapacity&&(e.memory.important="build"):0===e.carry.energy?e.memory.important="mine":e.carry.energy===e.carryCapacity&&(e.memory.important="deposit")}act(e),depositAura(e),gatherAura(e)}function toad(e){if(0===e.carry[e.resourceType]&&(e.memory.important="mine"),gatherAura(e),act(e),!e.memory.to){var r=Game.getObjectById(e.memory.mine),o=r.pos.findClosestByRange(FIND_STRUCTURES,{filter:function(e){return e.structureType==STRUCTURE_CONTAINER}});o&&(e.memory.to=[o.id])}}function tower(e){var r=e.pos.findInRange(FIND_HOSTILE_CREEPS,15);Memory.towers[e.id]||(Memory.towers[e.id]={}),Memory.towers[e.id].mode||(Memory.towers[e.id].mode="alert"),e.energy<=900||r.length>0?Memory.towers[e.id].mode="alert":e.energy>900&&(Memory.towers[e.id].mode="repair");var o=Memory.towers[e.id].mode;if("alert"==o){var t=e.room.find(FIND_MY_CREEPS,{filter:function(e){return e.hits<e.hitsMax}});r.length>0?(r.length>1&&r.sort(function(e,r){return e.hits-r.hits}),e.attack(r[0])):t.length>0&&(t.length>1&&t.sort(function(e,r){return e.hits-r.hits}),e.heal(t[0]))}else if("repair"==o){var n=e.room.find(FIND_STRUCTURES,{filter:function(e){return e.hitsMax/2>e.hits&&e.hits<1e5}});n.length>0&&(n.length>1&&n.sort(function(e,r){return e.hits-r.hits}),e.repair(n[0]))}else r.length>0&&(r.length>1&&r.sort(function(e,r){return e.hits-r.hits}),e.attack(r[0]))}function eraseDead(){for(var e in Memory.creeps)Game.creeps[e]||delete Memory.creeps[e]}Room.prototype.roleCount=function(e){return this.find(FIND_MY_CREEPS,{filter:function(r){return r.memory.role==e}}).length},Room.prototype.roleIDs=function(e){var r=[],o=this.find(FIND_MY_CREEPS,{filter:function(r){return r.memory.role==e}});for(var t in o)r.push(o[t].id);return r},Room.prototype.containerIDs=function(){var e=[],r=this.find(FIND_STRUCTURES,{filter:function(e){return e.structureType==STRUCTURE_CONTAINER}});for(var o in r)e.push(r[o].id);return e},Room.prototype.extensionIDs=function(){var e=[],r=this.find(FIND_MY_STRUCTURES,{filter:function(e){return e.structureType==STRUCTURE_EXTENSION}});for(var o in r)e.push(r[o].id);return e},Room.prototype.spawnerIDs=function(){var e=[],r=this.find(FIND_MY_STRUCTURES,{filter:function(e){return e.structureType==STRUCTURE_SPAWN}});for(var o in r)e.push(r[o].id);return e},Room.prototype.towerIDs=function(){var e=[],r=this.find(FIND_MY_STRUCTURES,{filter:function(e){return e.structureType==STRUCTURE_TOWER}});for(var o in r)e.push(r[o].id);return e},Room.prototype.storageIDs=function(){var e=[],r=this.find(FIND_STRUCTURES,{filter:function(e){return e.structureType==STRUCTURE_STORAGE}});for(var o in r)e.push(r[o].id);return e},Room.prototype.miningSpots=function(){var e=this,r=0,o=[];return e.find(FIND_SOURCES).forEach(function(t){var n=t.id;o=e.lookForAtArea("terrain",t.pos.y-1,t.pos.x-1,t.pos.y+1,t.pos.x+1,!0);for(var a=0;a<o.length;a++)"plain"!=o[a].terrain&&"swamp"!=o[a].terrain||(r++,Memory.rooms[e.name].sources||(Memory.rooms[e.name].sources={}),Memory.rooms[e.name].sources[n]||(Memory.rooms[e.name].sources[n]={}),Memory.rooms[e.name].sources[n].spots||(Memory.rooms[e.name].sources[n].spots={}),Memory.rooms[e.name].sources[n].spots[r]||(Memory.rooms[e.name].sources[n].spots[r]="empty"))}),r},Callback.prototype={subscribe:function(e){this.handlers.push(e)},unsubscribe:function(e){this.handlers=this.handlers.filter(function(r){if(r!==e)return r})},fire:function(e,r){this.handlers.forEach(function(o){try{o.call(r,e)}catch(r){console.log("Ignored error calling back ",o.name,"with",e,"-",r)}})}},global.stats_callbacks=new Callback,eraseDead();for(var name in Game.creeps){var creep=Game.creeps[name];"redspawn"==creep.memory.role?redspawn(creep):"tadpole"==creep.memory.role?tadpole(creep):"frog"==creep.memory.role?frog(creep):"toad"==creep.memory.role?toad(creep):"newt"==creep.memory.role&&newt(creep),"squatter"==creep.memory.role&&squatter(creep)}for(var _name in Game.spawns){var spawn=Game.spawns[_name];spawn.memory.queen&&spawner(spawn)}Memory.towers||(Memory.towers={});for(var towerID in Memory.towers)tower(Game.getObjectById(towerID));collect_stats();