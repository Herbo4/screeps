"use strict";function gatherAura(e){var r=e.pos.findInRange(FIND_DROPPED_RESOURCES,1,{filter:function(e){return e.resourceType==RESOURCE_ENERGY}}),t=e.pos.findInRange(FIND_STRUCTURES,1,{filter:function(e){return e.structureType==STRUCTURE_CONTAINER}}),o=e.pos.findInRange(FIND_STRUCTURES,1,{filter:function(e){return e.structureType==STRUCTURE_STORAGE}});"newt"!=e.memory.role&&"toad"!=e.memory.role&&0===e.withdraw(o[0],RESOURCE_ENERGY)&&e.say("shinies"),"toad"!=e.memory.role&&0===e.withdraw(t[0],RESOURCE_ENERGY)&&e.say("shinies"),0===e.pickup(r[0])&&e.say("shinies")}function depositAura(e){var r=e.pos.findInRange(FIND_MY_STRUCTURES,1,{filter:function(e){return e.structureType==STRUCTURE_EXTENSION}});for(var t in r)0===e.transfer(r[t],RESOURCE_ENERGY)&&e.say("teehee")}function frog(e){if(0===e.carry.energy?e.memory.state=0:e.carry.energy===e.carryCapacity&&(e.memory.state=1),e.memory.state)switch(e.build(Game.getObjectById(e.memory.build))){case 0:return e.say("riBBit",!0),Game.getObjectById(e.memory.build)||e.clearJob("build"),0;case-7:return e.clearJob("build"),null!==e.memory.build&&(e.memory.build=e.assignTask("build")),null!==e.memory.upgradeController&&(e.memory.upgradeController=e.assignTask("upgradeController")),-9==e.upgradeController(Game.getObjectById(e.memory.upgradeController))&&e.moveTo(Game.getObjectById(e.memory.upgradeController),{visualizePathStyle:{fill:"#ccff66",stroke:"#ccff66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),-7;case-9:return e.moveTo(Game.getObjectById(e.memory.build),{visualizePathStyle:{fill:"#ccff66",stroke:"#ccff66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),-9;case-10:return e.clearJob("build"),null!==e.memory.build&&(e.memory.build=e.assignTask("build")),null!==e.memory.upgradeController&&(e.memory.upgradeController=e.assignTask("upgradeController")),-9==e.upgradeController(Game.getObjectById(e.memory.upgradeController))&&e.moveTo(Game.getObjectById(e.memory.upgradeController),{visualizePathStyle:{fill:"#ccff66",stroke:"#ccff66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),-10}else switch(e.withdraw(Game.getObjectById(e.memory.withdraw))){case 0:return e.say("RibbiT",!0),Game.getObjectById(e.memory.withdraw).debrief(),0;case-6:return Game.getObjectById(e.memory.withdraw)&&(e.clearJob("withdraw"),e.memory.withdraw=e.assignTask("withdraw")),-9==e.harvest(Game.getObjectById(e.memory.harvest))?e.moveTo(Game.getObjectById(e.memory.harvest),{visualizePathStyle:{fill:"#ccff66",stroke:"#ccff66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}):-6==e.harvest(e.memory.harvest)&&(e.memory.eat=e.assignTask("eat"),-9==e.eat(e.memory.eat)&&e.moveTo(Game.getObjectById(e.memory.eat),{visualizePathStyle:{fill:"#ccff66",stroke:"#ccff66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}})),-6;case-7:return Game.getObjectById(e.memory.withdraw)&&(e.clearJob("withdraw"),e.memory.withdraw=e.assignTask("withdraw")),-9==e.harvest(Game.getObjectById(e.memory.harvest))?e.moveTo(Game.getObjectById(e.memory.harvest),{visualizePathStyle:{fill:"#ccff66",stroke:"#ccff66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}):-6==e.harvest(e.memory.harvest)&&(e.memory.eat=e.assignTask("eat"),-9==e.eat(e.memory.eat)&&e.moveTo(Game.getObjectById(e.memory.eat),{visualizePathStyle:{fill:"#ccff66",stroke:"#ccff66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}})),-7;case-9:return e.moveTo(Game.getObjectById(e.memory.withdraw),{visualizePathStyle:{fill:"#ccff66",stroke:"#ccff66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),-9;case-10:return Game.getObjectById(e.memory.withdraw)&&(e.clearJob("withdraw"),e.memory.withdraw=e.assignTask("withdraw")),-9==e.harvest(Game.getObjectById(e.memory.harvest))?e.moveTo(Game.getObjectById(e.memory.harvest),{visualizePathStyle:{fill:"#ccff66",stroke:"#ccff66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}):-6==e.harvest(e.memory.harvest)&&(e.memory.eat=e.assignTask("eat"),-9==e.eat(e.memory.eat)&&e.moveTo(Game.getObjectById(e.memory.eat),{visualizePathStyle:{fill:"#ccff66",stroke:"#ccff66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}})),-10}}function newt(e){if(0===e.carry.energy?e.memory.state=0:e.carry.energy===e.carryCapacity&&(e.memory.state=1),e.memory.state)switch(e.transfer(Game.getObjectById(e.memory.transfer),e.memory.resourceType)){case 0:return e.say("slink",!0),Game.getObjectById(e.memory.transfer).debrief(),0;case-7:return e.say("Bad Target",!1),e.memory.transfer=e.assignTask("transfer"),e.memory.eat=e.assignTask("eat"),e.eat(Game.getObjectById(e.memory.eat))<0&&(e.say(e.eat(Game.getObjectById(e.memory.eat))),e.moveTo(Game.getObjectById(e.memory.eat),{visualizePathStyle:{fill:"#ffcc00",stroke:"#ffcc00",lineStyle:"dashed",strokeWidth:.15,opacity:.1}})),-7;case-8:return e.memory.transfer=e.assignTask("transfer"),e.memory.eat=e.assignTask("eat"),e.eat(Game.getObjectById(e.memory.eat))<0&&e.moveTo(Game.getObjectById(e.memory.eat),{visualizePathStyle:{fill:"#ffcc00",stroke:"#ffcc00",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),-8;case-9:return e.moveTo(Game.getObjectById(e.memory.transfer),{visualizePathStyle:{fill:"#ffcc00",stroke:"#ffcc00",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),e.transfer(Game.getObjectById(e.memory.transfer),e.memory.resourceType)}else switch(e.withdraw(Game.getObjectById(e.memory.withdraw),e.memory.resourceType)){case 0:return e.say("peep",!0),Game.getObjectById(e.memory.withdraw).debrief(),0;case-6:return e.memory.withdraw=e.assignTask("withdraw"),e.memory.pickup=e.assignTask("pickup"),-9==e.pickup(Game.getObjectById(e.memory.pickup))&&e.moveTo(Game.getObjectById(e.memory.pickup),{visualizePathStyle:{fill:"#ffcc00",stroke:"#ffcc00",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),delete e.room.memory.jobs.pickup.tasks[e.memory.pickup],-6;case-7:return e.memory.withdraw=e.assignTask("withdraw"),e.memory.pickup=e.assignTask("pickup"),-9==e.pickup(Game.getObjectById(e.memory.pickup))&&e.moveTo(Game.getObjectById(e.memory.pickup),{visualizePathStyle:{fill:"#ffcc00",stroke:"#ffcc00",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),delete e.room.memory.jobs.pickup.tasks[e.id],-7;case-9:return e.moveTo(Game.getObjectById(e.memory.withdraw),{visualizePathStyle:{fill:"#ffcc00",stroke:"#ffcc00",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),-9}}function initialize(e){Memory.rooms[e.name]={},Memory.rooms[e.name].sc||(Memory.rooms[e.name].sc=e.find(FIND_SOURCES).length),Memory.rooms[e.name].pc||(Memory.rooms[e.name].pc=3e3*Memory.rooms[e.name].sc),Memory.rooms[e.name].pt||(Memory.rooms[e.name].pt=Math.ceil(Memory.rooms[e.name].pc/300)),Memory.rooms[e.name].jobs||(Memory.rooms[e.name].jobs={attack:{workers:{},tasks:{},assignment:{}},build:{workers:{},tasks:{},assignment:{}},transfer:{workers:{},tasks:{},assignment:{}},withdraw:{workers:{},tasks:{},assignment:{}},heal:{workers:{},tasks:{},assignment:{}},repair:{workers:{},tasks:{},assignment:{}},pickup:{workers:{},tasks:{},assignment:{}},harvest:{workers:{},tasks:{},assignment:{}},eat:{workers:{},tasks:{},assignment:{}},upgradeController:{workers:{},tasks:{},assignment:{}}}),Memory.rooms[e.name].miningSpots||(Memory.rooms[e.name].miningSpots=e.miningSpots(e.find(FIND_SOURCES)))}function queen(e){var r=e.room,t=r.find(FIND_STRUCTURES,{filter:function(e){return"container"==e.structureType}});for(var o in t)t[o].report();var s=r.find(FIND_DROPPED_RESOURCES);for(var a in s)s[a].report();Memory.rooms[r.name]||(initialize(r),Memory.rooms[r.name].jobs.transfer.tasks[e.id]=e.id,Memory.rooms[r.name].jobs.eat.tasks[e.id]=e.id,Memory.rooms[r.name].jobs.upgradeController.tasks[r.controller.id]=r.controller.id);var m=r.controller.level,i=Memory.recipes.frog,n=Memory.recipes.toad,y=Memory.recipes.newt,c=r.memory.jobs.withdraw.tasks?Object.keys(r.memory.jobs.withdraw.tasks).length:0,d=r.memory.jobs.build.tasks?Object.keys(r.memory.jobs.build.tasks).length:0,R=r.memory.jobs.pickup.tasks?Object.keys(r.memory.jobs.pickup.tasks).length:0;r.roleCount("toad")<r.memory.sc?spawnCreep(e,n,m):r.roleCount("newt")<c?(console.log(c+":"+R),spawnCreep(e,y,m)):r.roleCount("frog")<d&&spawnCreep(e,i,m)}function toad(e){if(0===e.carry.energy?e.memory.state=0:e.carry.energy>10&&(e.memory.state=1),e.memory.state)switch(e.build(Game.getObjectById(e.memory.build))){case 0:return e.say("riBBit",!0),Game.getObjectById(e.memory.build).debrief(),0;case-7:switch(e.clearJob("build"),null!==e.memory.build&&(e.memory.build=e.assignTask("build")),null!==e.memory.upgradeController&&(e.memory.upgradeController=e.assignTask("upgradeController")),e.harvest(Game.getObjectById(e.memory.harvest))){case 0:return e.say("BwaK",!0),e.upgradeController(Game.getObjectById(e.room.controller)),0;case-6:return e.memory.eat=e.assignTask("eat"),-9==e.eat(e.memory.eat)&&e.moveTo(Game.getObjectById(e.memory.eat),{visualizePathStyle:{fill:"#ffcc66",stroke:"#ffcc66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),-6;case-7:return e.say("Bad Target",!1),e.memory.harvest=e.assignTask("harvest"),e.memory.eat=e.assignTask("eat"),-9==e.eat(e.memory.eat)&&e.moveTo(Game.getObjectById(e.memory.eat),{visualizePathStyle:{fill:"#ffcc66",stroke:"#ffcc66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),-7;case-9:return e.moveTo(Game.getObjectById(e.memory.harvest),{visualizePathStyle:{fill:"#ffcc66",stroke:"#ffcc66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),-9}return-7;case-9:switch(null!==e.memory.build&&(e.memory.build=e.assignTask("build")),e.harvest(Game.getObjectById(e.memory.harvest))){case 0:return e.say("BwaK",!0),e.upgradeController(Game.getObjectById(e.room.controller)),0;case-6:return e.memory.eat=e.assignTask("eat"),-9==e.eat(e.memory.eat)&&e.moveTo(Game.getObjectById(e.memory.eat),{visualizePathStyle:{fill:"#ffcc66",stroke:"#ffcc66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),-6;case-7:return e.say("Bad Target",!1),e.memory.harvest=e.assignTask("harvest"),e.memory.eat=e.assignTask("eat"),-9==e.eat(e.memory.eat)&&e.moveTo(Game.getObjectById(e.memory.eat),{visualizePathStyle:{fill:"#ffcc66",stroke:"#ffcc66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),-7;case-9:return e.moveTo(Game.getObjectById(e.memory.harvest),{visualizePathStyle:{fill:"#ffcc66",stroke:"#ffcc66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),-9}}else switch(e.harvest(Game.getObjectById(e.memory.harvest))){case 0:return e.say("BwaK",!0),e.upgradeController(Game.getObjectById(e.room.controller)),0;case-6:return e.memory.eat=e.assignTask("eat"),-9==e.eat(e.memory.eat)&&e.moveTo(Game.getObjectById(e.memory.eat),{visualizePathStyle:{fill:"#ffcc66",stroke:"#ffcc66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),-6;case-7:return e.say("Bad Target",!1),e.memory.harvest=e.assignTask("harvest"),e.memory.eat=e.assignTask("eat"),-9==e.eat(e.memory.eat)&&e.moveTo(Game.getObjectById(e.memory.eat),{visualizePathStyle:{fill:"#ffcc66",stroke:"#ffcc66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),-7;case-9:return e.moveTo(Game.getObjectById(e.memory.harvest),{visualizePathStyle:{fill:"#ffcc66",stroke:"#ffcc66",lineStyle:"dashed",strokeWidth:.15,opacity:.1}}),-9}}function tower(e){var r=e.pos.findInRange(FIND_HOSTILE_CREEPS,15);Memory.towers[e.id]||(Memory.towers[e.id]={}),Memory.towers[e.id].mode||(Memory.towers[e.id].mode="alert"),e.energy<=900||r.length>0?Memory.towers[e.id].mode="alert":e.energy>900&&(Memory.towers[e.id].mode="repair");var t=Memory.towers[e.id].mode;if("alert"==t){var o=e.room.find(FIND_MY_CREEPS,{filter:function(e){return e.hits<e.hitsMax}});r.length>0?(r.length>1&&r.sort(function(e,r){return e.hits-r.hits}),e.attack(r[0])):o.length>0&&(o.length>1&&o.sort(function(e,r){return e.hits-r.hits}),e.heal(o[0]))}else if("repair"==t){var s=e.room.find(FIND_STRUCTURES,{filter:function(e){return e.hitsMax/2>e.hits&&e.hits<1e5}});s.length>0&&(s.length>1&&s.sort(function(e,r){return e.hits-r.hits}),e.repair(s[0]))}else r.length>0&&(r.length>1&&r.sort(function(e,r){return e.hits-r.hits}),e.attack(r[0]))}function assignSpot(e){for(var r in Memory.rooms[e.room.name].sources)if(Memory.rooms[e.room.name].lastAssignedSource!=r)for(var t in Memory.rooms[e.room.name].sources[r].spots){if(!Game.getObjectById(Memory.rooms[e.room.name].sources[r].spots[t]))return Memory.rooms[e.room.name].sources[r].spots[t]=e.id,Memory.rooms[e.room.name].lastAssignedSource=r,r;if(e.memory.priority>Game.getObjectById(Memory.rooms[e.room.name].sources[r].spots[t]).memory.priority)return Game.getObjectById(Memory.rooms[e.room.name].sources[r].spots[t]).suicide(),Memory.rooms[e.room.name].sources[r].spots[t]=e.id,Memory.rooms[e.room.name].lastAssignedSource=r,r}return e.pos.findClosestByRange(FIND_SOURCES).id}function spawnCreep(e,r,t){switch(e.createCreep(r.parts[t],Game.time,r.options)){case-1:console.log("You do not own the spawn being told to create a creep");break;case-3:console.log("There is already a creep with this name");break;case-10:console.log("Body part array not properly formed: "),console.log(JSON.stringify(r.parts[t]));break;case-14:console.log("RCL no longer sufficient to use this spawn")}}ConstructionSite.prototype.debrief=function(){delete this.room.memory.jobs.build.tasks[this.id]},StructureContainer.prototype.report=function(){this.store.energy>0&&(this.room.memory.jobs.withdraw.tasks[this.id]=this.id)},StructureContainer.prototype.debrief=function(){0===this.store.energy&&delete this.room.memory.jobs.withdraw.tasks[this.id]},StructureController.prototype.debrief=function(){return!0},Creep.prototype.eat=function(){return Game.getObjectById(this.memory.eat).renewCreep(this)},Creep.prototype.sacrifice=function(){return Game.getObjectById(this.memory.eat).recycleCreep(this)},Creep.prototype.clearJob=function(e){Game.getObjectById(this.memory[e])?Game.getObjectById(this.memory[e]).debrief():delete this.room.memory.jobs[e].tasks[this.memory[e]],delete this.room.memory.jobs[e].assignments[this.memory[e]]},Creep.prototype.clearCreep=function(){},StructureExtension.prototype.report=function(){this.energy<this.energyCapacity&&(this.room.memory.jobs.transfer.tasks[this.id]=this.energy)},StructureExtension.prototype.debrief=function(){this.energy===this.energyCapacity&&delete this.room.memory.jobs.transfer.tasks[this.id]},OwnedStructure.prototype.healthCheck=function(){object.hitsMax/2>object.hits&&object.hits<1e4&&(this.room.memory.jobs.repair.tasks[this.id]=this.hits)},OwnedStructure.prototype.discharge=function(){this.room.memory.repair[this.id]&&delete this.room.memory.jobs.repair.tasks[this.id]},Resource.prototype.report=function(){this.room.memory.jobs.pickup.tasks[this.id]=this.id},Room.prototype.roleCount=function(e){return this.find(FIND_MY_CREEPS,{filter:function(r){return r.memory.role==e}}).length},Room.prototype.miningSpots=function(e){var r=this,t=0,o=[];return e.forEach(function(e){var s=e.id;o=r.lookForAtArea("terrain",e.pos.y-1,e.pos.x-1,e.pos.y+1,e.pos.x+1,!0);for(var a=0;a<o.length;a++)"plain"!=o[a].terrain&&"swamp"!=o[a].terrain||(t++,Memory.rooms[r.name].sources||(Memory.rooms[r.name].sources={}),Memory.rooms[r.name].sources[s]||(Memory.rooms[r.name].sources[s]={},Memory.rooms[r.name].jobs.harvest.tasks[s]=s),Memory.rooms[r.name].sources[s].spots||(Memory.rooms[r.name].sources[s].spots={}),Memory.rooms[r.name].sources[s].spots[t]||(Memory.rooms[r.name].sources[s].spots[t]="empty"))}),t},StructureSpawn.prototype.report=function(){this.energy<this.energyCapacity&&(this.room.memory.jobs.transfer.tasks[this.id]=this.id)},StructureSpawn.prototype.debrief=function(){this.energy===this.energyCapacity&&delete this.room.memory.jobs.transfer.tasks[this.id]},StructureStorage.prototype.report=function(){this.store.energy>0&&(this.room.memory.jobs.withdraw.tasks[this.id]=this.energy)},StructureStorage.prototype.debrief=function(){0===this.store.energy&&delete this.room.memory.jobs.withdraw.tasks[this.id]},StructureTower.prototype.report=function(){this.energy<this.energyCapacity&&(this.room.memory.jobs.transfer.tasks[this.id]=this.energy)},StructureTower.prototype.debrief=function(){this.energy===this.energyCapacity&&delete this.room.memory.jobs.transfer.tasks[this.id]},Creep.prototype.assignTask=function(e){var r=Object.keys(this.room.memory.jobs[e].tasks);this.room.memory.jobs[e].workers[this.id]||(this.room.memory.jobs[e].workers[this.id]=this.id);var t=Object.keys(this.room.memory.jobs[e].workers);if(!r.length)return null;if(!(t.length>r.length)){for(var o=0;o<t.length;o++)this.room.memory.jobs[e].assignment[this.id]=this.room.memory.jobs[e].tasks[r[o]];return this.room.memory.jobs[e].assignment[this.id]}for(var s=0;s<t.length;s++)return console.log(this.id+" being assigned at index "+s+" for worker value "+this.room.memory.jobs[e].workers[t[s]]),r[s]?(console.log("creep with id "+this.id+" being assigned to "+e+" "+r[s]+" at index "+s),this.room.memory.jobs[e].assignment[this.id]=r[s],this.room.memory.jobs[e].assignment[this.id]):(console.log("creep with id "+this.id+" being assigned to b "+r[r%o]+" at index "+r%o),this.room.memory.jobs[e].assignment[this.id]=r[r.length-r%o],this.room.memory.jobs[e].assignment[this.id])},Memory.recipes||(Memory.recipes={}),Memory.recipes.frog={parts:{1:[MOVE,CARRY,MOVE,WORK],2:[MOVE,CARRY,MOVE,WORK],3:[MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK],4:[MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK],5:[MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK],6:[MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK],7:[MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK],8:[MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK,MOVE,CARRY,MOVE,WORK]},options:{role:"frog",resourceType:RESOURCE_ENERGY}},Memory.recipes.newt={parts:{1:[MOVE,CARRY,MOVE,CARRY],2:[MOVE,CARRY,MOVE,CARRY],3:[MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY],4:[MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY],5:[MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY],6:[MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY],7:[MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY],8:[MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,MOVE,CARRY,CARRY,CARRY,CARRY,CARRY,CARRY,CARRY,CARRY,CARRY]},options:{role:"newt",resourceType:RESOURCE_ENERGY}},Memory.recipes.toad={parts:{1:[MOVE,WORK,CARRY,WORK],2:[MOVE,WORK,CARRY,WORK],3:[MOVE,WORK,WORK,MOVE,WORK,WORK,CARRY],4:[MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,CARRY],5:[MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,CARRY],6:[MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,CARRY],7:[MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,CARRY],8:[MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,WORK,WORK,MOVE,CARRY]},options:{role:"toad",resourceType:RESOURCE_ENERGY}},module.exports.loop=function(){for(var e in Game.constructionSites)Game.getObjectById(e).room.memory.jobs.build.tasks[e]=e;for(var r in Game.structures){var t=Game.structures[r];switch(t.structureType){case"spawn":t.memory.queen&&queen(t),t.report();break;case"extension":case"storage":t.report();break;case"tower":tower(t),t.report()}}for(var o in Game.creeps){Game.creeps[o]||(delete s.room.memory.jobs.pickup.workers[s.id],delete s.room.memory.jobs.withdraw.workers[s.id],delete s.room.memory.jobs.transfer.workers[s.id],delete s.room.memory.jobs.build.workers[s.id],delete s.room.memory.jobs.upgradeController.workers[s.id],delete s.room.memory.jobs.eat.workers[s.id],delete s.room.memory.jobs.harvest.workers[s.id],delete s.room.memory.jobs.pickup.assignment[s.id],delete s.room.memory.jobs.withdraw.assignment[s.id],delete s.room.memory.jobs.transfer.assignment[s.id],delete s.room.memory.jobs.build.assignment[s.id],delete s.room.memory.jobs.upgradeController.assignment[s.id],delete s.room.memory.jobs.eat.assignment[s.id],delete s.room.memory.jobs.harvest.assignment[s.id],delete Memory.creeps[o]);var s=Game.creeps[o];switch(s.memory.room=s.room.name,s.memory.role){case"redspawn":redspawn(s);break;case"tadpole":tadpole(s);break;case"frog":frog(s);break;case"toad":toad(s);break;case"newt":newt(s);break;case"squatter":squatter(s);break;case"poliwog":poliwog(s)}}};